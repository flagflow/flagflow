{
	"openapi": "3.0.0",
	"info": {
		"version": "1.6.0",
		"title": "FlagFlow API",
		"description": "Auto-generated OpenAPI specification for FlagFlow REST API"
	},
	"servers": [
		{
			"url": "/api",
			"description": "API base path"
		}
	],
	"components": {
		"schemas": {
			"SuccessResponse": {
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean"
					}
				},
				"required": ["success"]
			},
			"ErrorResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": ["message"]
			},
			"LoginRequest": {
				"type": "object",
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": ["username", "password"]
			},
			"LoginResponse": {
				"type": "object",
				"properties": {
					"session": {
						"type": "string"
					},
					"ttlSeconds": {
						"type": "number"
					},
					"expiredAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": ["session", "ttlSeconds", "expiredAt"]
			},
			"LogoutResponse": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string"
					}
				},
				"required": ["status"]
			},
			"CreateUserRequest": {
				"type": "object",
				"properties": {
					"key": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"password": {
						"type": "string",
						"minLength": 1
					},
					"permissions": {
						"type": "array",
						"items": {
							"type": "string",
							"enum": ["flag-create", "flag-schema", "flag-value", "users", "migration"]
						}
					},
					"mustChangePassword": {
						"type": "boolean"
					}
				},
				"required": ["key", "name", "password", "permissions", "mustChangePassword"]
			},
			"UpdateUserRequest": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"password": {
						"type": "string",
						"minLength": 1
					},
					"mustChangePassword": {
						"type": "boolean"
					},
					"permissions": {
						"type": "array",
						"items": {
							"type": "string",
							"enum": ["flag-create", "flag-schema", "flag-value", "users", "migration"]
						}
					},
					"enabled": {
						"type": "boolean"
					}
				}
			},
			"UsersResponse": {
				"type": "object",
				"properties": {
					"users": {
						"type": "object",
						"additionalProperties": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"permissions": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"enabled": {
									"type": "boolean"
								},
								"passwordExpireAt": {
									"type": "string",
									"format": "date-time"
								}
							}
						}
					}
				},
				"required": ["users"]
			},
			"SessionsResponse": {
				"type": "object",
				"properties": {
					"sessions": {
						"type": "object",
						"additionalProperties": {
							"type": "object",
							"properties": {
								"createdAt": {
									"type": "string",
									"format": "date-time"
								},
								"expiredAt": {
									"type": "string",
									"format": "date-time"
								},
								"user": {
									"type": "object",
									"properties": {
										"key": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"permissions": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									},
									"required": ["key", "name", "permissions"]
								}
							},
							"required": ["createdAt", "expiredAt", "user"]
						}
					}
				},
				"required": ["sessions"]
			}
		},
		"parameters": {},
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"description": "Session token from login endpoint"
			}
		}
	},
	"paths": {
		"/": {
			"get": {
				"summary": "Get OpenAPI Specification",
				"description": "Returns the OpenAPI specification for this API.",
				"tags": ["General"],
				"responses": {
					"200": {
						"description": "OpenAPI specification returned successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"500": {
						"description": "Failed to load OpenAPI specification",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/login": {
			"post": {
				"summary": "User Login",
				"description": "Authenticate a user and return a session token.",
				"tags": ["Authentication"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Login successful",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LoginResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request - Invalid input data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Authentication failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/logout": {
			"post": {
				"summary": "User Logout",
				"description": "Log out the current user session.",
				"tags": ["Authentication"],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Logout successful",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LogoutResponse"
								}
							}
						}
					},
					"403": {
						"description": "Logout failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/sessions": {
			"get": {
				"summary": "Get Sessions",
				"description": "Get all active user sessions. Requires authentication.",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Sessions"],
				"responses": {
					"200": {
						"description": "Sessions retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SessionsResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/sessions/{id}": {
			"delete": {
				"summary": "Delete Session",
				"description": "Delete a specific user session. Requires authentication.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Session ID to delete",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Sessions"],
				"responses": {
					"200": {
						"description": "Session deleted successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/users": {
			"get": {
				"summary": "Get Users",
				"description": "Get all users in the system. Requires authentication.",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Users"],
				"responses": {
					"200": {
						"description": "Users retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create User",
				"description": "Create a new user in the system. Requires authentication.",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Users"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request - Invalid input data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/users/{key}": {
			"patch": {
				"summary": "Update User",
				"description": "Update an existing user. Requires authentication.",
				"parameters": [
					{
						"name": "key",
						"in": "path",
						"description": "User key to update",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Users"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User updated successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request - Invalid input data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete User",
				"description": "Delete a user from the system. Requires authentication.",
				"parameters": [
					{
						"name": "key",
						"in": "path",
						"description": "User key to delete",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Users"],
				"responses": {
					"200": {
						"description": "User deleted successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request - Cannot delete own user account",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		}
	}
}
